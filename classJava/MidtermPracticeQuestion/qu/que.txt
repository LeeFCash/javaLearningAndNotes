quiz 2 ch 10 - 
Consider the following declarations:

public interface Encryptable
{
   void encrypt(String key);
}
 
public class SecretText implements Encryptable
{
   private String text; 
   _____________________________
   { 
      // code to encrypt the text using encryption key goes here 
   }
}
Which of the following method headers should be used to complete the SecretText class?
public void encrypt(String aKey) <- 
2)
Using the given definition of the Measurable interface:

public interface Measurable
{
   double getMeasure();
}
Consider the following code snippet, assuming that BankAccount has a getBalance method and implements the Measurable interface by providing an implementation for the getMeasure method:

Measurable m = new Measurable();
System.out.println(m.getMeasure());
Which of the following statements is true?
The code does not compile because interface types cannot be instantiated. <-- 
3) 
Which of the following statements about a Java interface is NOT true?
false -  A Java interface must contain more than one method.
true - A Java interface defines a set of methods that are required.
true - A Java interface specifies behavior that a class will implement.
true -All methods in a Java interface must be public.
4)
Consider the following class:

public class Player implements Comparable
{
   private String name;
   private int goalsScored;
   
   // other methods go here
 
   public int compareTo(Object otherObject)
   { 
      __________________________________
      return (goalsScored â€“ otherPlayer.goalsScored);
   }
}
What statement can be used to complete the compareTo() method?
Player otherPlayer = (Player) otherObject; <--
5) 
Which of the following can potentially be changed when implementing an interface?
You cannot change the name, return type, or types of parameters of a method in the interface. <--
6)
Using the following definitions of the Measurable and Named interfaces.

public interface Measurable
{
   double getMeasure();
}
public interface Named
{
   double getName();
}
Assume BankAccount provides the code for the getMeasure() and getName() methods. Which of the following could correctly represent the class header for BankAccount?
public class BankAccount implements Measurable, Named <-- 
7)
A class that implements an interface must provide an implementation for all ____ methods.
abstract <--
8)
Consider the definition of the Measurable interface and the code snippet defining the Inventory class:

public interface Measurable
{
   double getMeasure();
}
public class Inventory implements Measurable
{
   . . .
   public double getMeasure()
   {
      return onHandCount;
   }
}
Why is it necessary to declare getMeasure as public in the Inventory class?
All methods in a class are not public by default. <--
9)
Suppose you are writing an interface called Resizable, which includes one void method called resize that accepts no parameters.

public interface Resizable
{
   _________________________
}
Which of the following can be used to complete the interface declaration correctly?
void resize(); <--
10)
Consider the definition of the Measurable interface and the code snippet defining the Inventory class:

public interface Measurable
{
   double getMeasure();
}
public class Inventory implements Measurable
{
   . . .
   double getMeasure()
   {
      return onHandCount;
   }
}
What is wrong with this code?
The getMeasure() method must be declared as public. <--
11)
Using the given definition of the Measurable interface:

public interface Measurable
{
   double getMeasure();
}
Consider the following code snippet, assuming that BankAccount has a getBalance method and implements the Measurable interface by providing an implementation for the getMeasure method:

Measurable m = new BankAccount();
System.out.println(_________________________);
Select the correct expression to display the balance of the bank account.
((BankAccount) m).getBalance() <-- 
12)
Which of the following statements about interfaces is true?
false - You cannot define a variable whose type is an interface.
false - You can define an interface variable that refers to an object of any class in the same package.
true - You can define an interface variable that refers to an object only if the object belongs to a class that implements the interface.
false -You can instantiate an object from an interface class.
13)
To use an interface, a class header should include which of the following?
The keyword implements and the name of the interface <--
14)
Consider the following code snippet.

public interface Measurable
{
   double getMeasure();
}
 
public class Coin implements Measurable
{
   public Coin(double aValue, String aName) { ... }
   
   public double getMeasure()
   {
      return value;
   }
   ...
}
 
public class BankAccount implements Measurable
{
   public BankAccount(double initBalance) { ... }
   
   public void getMeasure()
   {
      return balance;
   }
   ...
}
Which of the following statements is correct?
--> Coin dime = new Coin(0.1, "dime");
Measurable m = dime; <-- 
15)
What type of edge does UML use to denote interface implementation?
A dotted arrow from the class to the interface terminated with a triangular tip. <-- 
16)
Which of the following statements about abstract methods is true?
false - An abstract method has only a name and a return type, but no parameters or code in its body.
false - An abstract method has a name, a return type, and code in its body, but has no parameters.
false - An abstract method has parameters, a return type, and code in its body, but has no defined name.
true - An abstract method has a name, parameters, and a return type, but no code in the body of the method.
17)
Which of the following statements is correct about inheritance and interfaces?
A class can extend at most one class and can implement multiple interfaces.
18)
Which statement about methods in an interface is true?
All methods in an interface are automatically public.
19)
Which of the following statements about interfaces is NOT true?
A class can implement only one interface type.
20)
A method that has no implementation is called a/an ____ method.
abstract
